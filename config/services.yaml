# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    horeca.base_url: '%env(resolve:HORECA_BASE_URL)%'
    horeca.api_key: '%env(resolve:HORECA_API_KEY)%'
    horeca.shared_key: '%env(resolve:HORECA_SHARED_KEY)%'
    horeca.middleware_client_id: '%env(resolve:HORECA_MIDDLEWARE_CLIENT_ID)%'
    horeca.enable_request_exception_logging: '%env(resolve:HORECA_ENABLE_REQUEST_EXCEPTION_LOGGING)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Horeca\MiddlewareClientBundle\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Horeca\MiddlewareCommonLib\Service\HorecaApiInterface:
        class: Horeca\MiddlewareCommonLib\Service\HorecaApiService
        calls:
            - [ setBaseUrl, [ '%horeca.base_url%' ] ]
            - [ setApiKey, [ '%horeca.api_key%' ] ]
            - [ setMiddlewareClientId, [ '%horeca.middleware_client_id%' ] ]

    Horeca\MiddlewareClientBundle\EventListener\RequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
        calls:
            - [ enableRequestExceptionLogging, [ '%horeca.enable_request_exception_logging%' ] ]
