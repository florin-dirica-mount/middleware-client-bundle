parameters:
    horeca.api_key: '%env(resolve:HORECA_API_KEY)%'
    horeca.enable_request_exception_logging: '%env(resolve:HORECA_ENABLE_REQUEST_EXCEPTION_LOGGING)%'

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    Horeca\MiddlewareClientBundle\:
        resource: '../../'
        exclude:
            - '../../DependencyInjection/'
            - '../../Entity/'
            - '../../Resources/'
            - '../../Exception/'
            - '../../Message/'
            - '../../DataFixtures/'
            - '../../Kernel.php'
            - '../../HorecaMiddlewareClientBundle.php'

    Horeca\MiddlewareCommonLib\Service\HorecaApiInterface:
        class: Horeca\MiddlewareCommonLib\Service\HorecaApiService
        arguments:
            - '@jms_serializer'
        calls:
            - [ setBaseUrl, [ '%env(resolve:HORECA_BASE_URL)%' ] ]
            - [ setApiKey, [ '%env(resolve:HORECA_API_KEY)%' ] ]
            - [ setMiddlewareClientId, [ '%env(resolve:HORECA_MIDDLEWARE_CLIENT_ID)%' ] ]

    Horeca\MiddlewareClientBundle\EventListener\RequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
        calls:
            - [ enableRequestExceptionLogging, [ '%horeca.enable_request_exception_logging%' ] ]
